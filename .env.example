### Telliot-core environment variables
PULSE_TESTNET_RPC_URL="https://rpc.v4.testnet.pulsechain.com"
# - PULSE_TESTNET_RPC_URL is the RPC URL for the "Pulsechain Testnet" entry in the ~/telliot/endpoints.yaml
PULSE_MAINNET_RPC_URL="https://rpc.pulsechain.com"
# - PULSE_MAINNET_RPC_URL is the RPC URL for the "Pulsechain Mainnet" entry in the ~/telliot/endpoints.yaml
PULSE_MAINNET_RPC_FAILOVER_URL="https://rpc-pulsechain.g4mm4.io"
# - PULSE_MAINNET_RPC_FAILOVER_URL is the RPC URL for the "Pulsechain Mainnet Failover Endpoint" entry in the ~/telliot/endpoints.yaml

ACTIVATE_TELLIOT_LOG_FILE="False"
# mainnet sources
FETCH_FLEX_V3_ADDRESS="0xc1EeD9232A0A44c2463ACB83698c162966FBc78d"

REORG_SAFE_DEFAULT="10"

PRICE_TOLERANCE="0.01" # 1%

PLS_SOURCE=weighted
TWAP_TIMESPAN="1800" # 30 minutes in seconds
MAX_RETRIES="5"
FETCH_LP_INTERVAL="60"
DEBUGGING_PRICE="False"

LP_PULSE_NETWORK_URL="https://rpc.pulsechain.com"
COINGECKO_MOCK_URL=http://localhost:3000/coingecko
DEXSCREENER_MOCK_URL=http://localhost:3000/dexscreener/latest/dex/pairs/pulsechain

PLS_CURRENCY_SOURCES="usdt,usdc,dai"
PLS_ADDR_SOURCES="0x322df7921f28f1146cdf62afdac0d6bc0ab80711,0x6753560538eca67617a9ce605178f788be7e524e,0xe56043671df55de5cdf8459710433c10324de0ae"
PLS_LPS_ORDER="USDT/WPLS,USDC/WPLS,WPLS/DAI"

PRICE_SERVICE_BASE_URL="http://127.0.0.1:3333"

REPORT_TIME_LIMIT="3600" # 1 hour in seconds, reaching this limit triggers a report
PERCENTAGE_CHANGE_THRESHOLD="0.006" # percentage difference >= 0.5% triggers a report
# testnet sources

#PLS_SOURCE=weighted
#TWAP_TIMESPAN="1800" # 30 minutes in seconds
#MAX_RETRIES="5"

#LP_PULSE_NETWORK_URL="https://rpc.v4.testnet.pulsechain.com"

### testnet sources
# LP_PULSE_NETWORK_URL="https://rpc.v4.testnet.pulsechain.com"
# PLS_CURRENCY_SOURCES="usdc,dai"
# PLS_ADDR_SOURCES="0xb7f1f5a3b79b0664184bb0a5893aa9359615171b,0xa2d510bf42d2b9766db186f44a902228e76ef262"
# PLS_LPS_ORDER="WPLS/USDC,WPLS/tDAI"

### FetchRNG settings

# Etherscan API key is required in order to report using the included RNG
# This is required for reporting to RNG feeds
# ETHERSCAN_API_KEY=

### Settings for interval based RNG feeds
## Interval time with will be used to calculate the timestamp
# INTERVAL=300

# Start time syncs the interval reporter in order to sync with consuming smart contracts
# START_TIME=1653350400

# For RNG managed feeds, this is the name of the RNG feed
# FETCH_RNG_NAME=test

FETCH_USD_MOCK_PRICE="1"
